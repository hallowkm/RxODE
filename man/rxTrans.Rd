% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RxODE.R
\name{rxTrans}
\alias{rxTrans}
\title{Translate the model to C code if needed}
\usage{
rxTrans(model, cFile = sprintf("\%s.c", gsub("[.][^.]*$", "", model)),
  extraC = NULL, modelPrefix = "", md5 = "", modName = NULL,
  modVars = FALSE, ...)
}
\arguments{
\item{model}{This can be either a string specifying a file name for
the RxODE code, or an RxODE family of objects}

\item{cFile}{The C file where the code should be output}

\item{extraC}{Extra c code to include in the model.  This can be
useful to specify functions in the model.  These C functions
should usually take \code{double} precision arguments, and
return \code{double} precision values.}

\item{modelPrefix}{Prefix of the model functions that will be
compiled to make sure that multiple RxODE objects can coexist
in the same R session.}

\item{md5}{Is the md5 of the model before parsing, and is used to
embed the md5 into dll, and then provide for functions like
\code{\link{rxModelVars}}.}

\item{modName}{is a string specifying the model name.  This string
is used to generate the model's dll file.  If unspecified, and
the model does not come from the file, the model dll name is
based on the parsed md5.}

\item{modVars}{returns the model variables instead of the named
vector of translated properties.}

\item{...}{Ignored parameters.}
}
\value{
a named vector of translated model properties
      including what type of jacobian is specified, the \code{C} function prefixes,
      as well as the \code{C} functions names to be called through the compiled model.
}
\description{
This function translates the model to C code, if needed
}
\seealso{
\code{\link{RxODE}}, \code{\link{rxCompile}}.
}

